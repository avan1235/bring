name: Publish Client

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Extract version name
        id: extract_name
        run: echo "name=$(echo ${GITHUB_REF##*/})" >>$GITHUB_OUTPUT
        shell: bash

      - name: Checkout to push branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          mytoken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ steps.extract_name.outputs.name }}
          body: ${{ steps.changelog.outputs.changelog }}

  build-web:
    name: Build web release
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout to push branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.3.0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Build Wasm Distribution
        if: job.status == 'success'
        run: |
          export GRADLE_USER_HOME=$(pwd)/.gradle
          export CLIENT_HOST=${{ secrets.CLIENT_HOST }}
          export CLIENT_PORT=${{ secrets.CLIENT_PORT }}
          export CLIENT_HTTP_PROTOCOL=https
          export CLIENT_WS_PROTOCOL=wss
          chmod +x ./gradlew
          ./gradlew composeApp:composeCompatibilityBrowserDistribution
        env:
          VERSION: ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        shell: bash
        run: |
          netlify deploy --prod --dir='composeApp/build/dist/composeWebCompatibility/productionExecutable' --message 'version ${{ github.sha }}'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  build-android:
    name: Build android release
    permissions: write-all
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout to push branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.3.0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'bring.jks'
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Build APK file
        if: job.status == 'success'
        run: |
          export GRADLE_USER_HOME=$(pwd)/.gradle
          export CLIENT_HOST=${{ secrets.CLIENT_HOST }}
          export CLIENT_PORT=${{ secrets.CLIENT_PORT }}
          export CLIENT_HTTP_PROTOCOL=https
          export CLIENT_WS_PROTOCOL=wss
          chmod +x ./gradlew
          ./gradlew composeApp:assembleDebug
          export BUMP_FILE_VERSION_CODE=true
          ./gradlew composeApp:assembleRelease composeApp:bundleRelease -Pandroid.injected.signing.store.file=$SIGNING_STORE_FILE -Pandroid.injected.signing.store.password=$SIGNING_STORE_PASSWORD -Pandroid.injected.signing.key.alias=$SIGNING_KEY_ALIAS -Pandroid.injected.signing.key.password=$SIGNING_KEY_PASSWORD
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_STORE_FILE: ${{ steps.decode_keystore.outputs.filePath }}
          VERSION: ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}

      - name: Upload debug artifact file to workflow run results
        uses: actions/upload-artifact@v4
        with:
          name: Bring-Debug-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.apk
          path: composeApp/build/outputs/apk/debug/composeApp-debug.apk

      - name: Upload release artifact file to workflow run results
        uses: actions/upload-artifact@v4
        with:
          name: Bring-Release-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.apk
          path: composeApp/build/outputs/apk/release/composeApp-release.apk

      - name: Upload release bundle file to workflow run results
        uses: actions/upload-artifact@v4
        with:
          name: Bring-Release-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.aab
          path: composeApp/build/outputs/bundle/release/composeApp-release.aab

      - name: Upload debug artifact file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./composeApp/build/outputs/apk/debug/composeApp-debug.apk
          asset_name: Bring-Debug-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload release artifact file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./composeApp/build/outputs/apk/release/composeApp-release.apk
          asset_name: Bring-Release-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload release bundle file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./composeApp/build/outputs/bundle/release/composeApp-release.aab
          asset_name: Bring-Release-${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}.aab
          asset_content_type: application/x-authorware-bin

      - name: Upload release bundle file to Google Play
        if: contains(env.PUBLISH_TO_GOOGLE_PLAY, 'true')
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: in.procyk.bring
          releaseFiles: ./composeApp/build/outputs/bundle/release/composeApp-release.aab
          track: production
          releaseName: ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}
        env:
          PUBLISH_TO_GOOGLE_PLAY: ${{secrets.PUBLISH_TO_GOOGLE_PLAY}}

      - name: Commit version code changes
        if: contains(env.PUBLISH_TO_GOOGLE_PLAY, 'true')
        run: |
          git config --global user.name "${{ secrets.CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ secrets.CI_COMMIT_EMAIL }}"
          git commit ./gradle/libs.versions.toml -m "update version code"
          git pull --rebase origin master
          git push origin HEAD:master
        env:
          PUBLISH_TO_GOOGLE_PLAY: ${{secrets.PUBLISH_TO_GOOGLE_PLAY}}
